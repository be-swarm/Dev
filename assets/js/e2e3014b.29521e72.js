"use strict";(self.webpackChunkdev=self.webpackChunkdev||[]).push([[3615],{3905:(e,t,s)=>{s.d(t,{Zo:()=>p,kt:()=>m});var n=s(7294);function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function i(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function a(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?i(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):i(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function o(e,t){if(null==e)return{};var s,n,r=function(e,t){if(null==e)return{};var s,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)s=i[n],t.indexOf(s)>=0||(r[s]=e[s]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)s=i[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),s=t;return e&&(s="function"==typeof e?e(t):a(a({},t),e)),s},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var s=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(s),m=r,v=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return s?n.createElement(v,a(a({ref:t},p),{},{components:s})):n.createElement(v,a({ref:t},p))}));function m(e,t){var s=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=s.length,a=new Array(i);a[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var u=2;u<i;u++)a[u]=s[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,s)}d.displayName="MDXCreateElement"},1796:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var n=s(7462),r=(s(7294),s(3905));const i={sidebar_position:2},a=void 0,o={unversionedId:"DevApps/NotionsDeBase/Logique BeSwarm",id:"DevApps/NotionsDeBase/Logique BeSwarm",title:"Logique BeSwarm",description:"Be Swarm est une plateforme d\xe9centralis\xe9e, \xe9volutive et dynamique.",source:"@site/docs/DevApps/NotionsDeBase/Logique BeSwarm.md",sourceDirName:"DevApps/NotionsDeBase",slug:"/DevApps/NotionsDeBase/Logique BeSwarm",permalink:"/Dev/docs/DevApps/NotionsDeBase/Logique BeSwarm",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Dev/docs/DevApps/NotionsDeBase/Introduction"},next:{title:"Inscrire son application",permalink:"/Dev/docs/DevApps/NotionsDeBase/Inscrire son application"}},l={},u=[{value:"Les services",id:"les-services",level:2},{value:"Les essaims",id:"les-essaims",level:2},{value:"Les utilisateurs",id:"les-utilisateurs",level:2},{value:"Les applications",id:"les-applications",level:2}],p={toc:u};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Be Swarm est une plateforme d\xe9centralis\xe9e, \xe9volutive et dynamique."),(0,r.kt)("p",null,"Elle s'articule autour de 4 composants principaux :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Les services"),(0,r.kt)("li",{parentName:"ul"},"Les essaimls"),(0,r.kt)("li",{parentName:"ul"},"Les utilisateurs"),(0,r.kt)("li",{parentName:"ul"},"Les applications")),(0,r.kt)("h2",{id:"les-services"},"Les services"),(0,r.kt)("p",null,"Se sont les web api qui permettent d'acc\xe9der aux donn\xe9es de l'utilisateur.\nLes services sont dynamiques et plusieurs services diff\xe9rents peuvent servir les m\xeames essaims.\nChaque service dispose d'un point d'entr\xe9e public."),(0,r.kt)("h2",{id:"les-essaims"},"Les essaims"),(0,r.kt)("p",null,"Les essaims peuvent \xeatre assimil\xe9s \xe0 des bases de donn\xe9es et/ou a des espaces de stockage.\nCe sont dans un essaim que les donn\xe9es d'un utilisateur sont stock\xe9es.\nUn essaim peut \xeatre services par plusieurs services diff\xe9rents.\nLe but d'avoir plusieurs essaims permet d'assurer une forte disponibilit\xe9 des donn\xe9es de l'utilisateur.\nSi un essaim venait \xe0 \xeatre indisponible, seuls les utilisateurs qui y ont acc\xe8s seraient impact\xe9s.\nCela permet \xe9galement d'avoir des essaims au plus proche des utilisateurs afin de garantir une bonne performance."),(0,r.kt)("h2",{id:"les-utilisateurs"},"Les utilisateurs"),(0,r.kt)("p",null,"Ce sont les utilisateurs de la plateforme.\nUn utilisateur a l'ensemble de ses donn\xe9es dans un essaim. Essaim qu'il a choisi au moment de la cr\xe9ation de son compte."),(0,r.kt)("h2",{id:"les-applications"},"Les applications"),(0,r.kt)("p",null,"Ce sont toutes les applications d\xe9velopp\xe9es autour de la plateforme BeSwarm que l'utilisateur peut utiliser."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Schema",src:s(970).Z,width:"535",height:"229"})))}c.isMDXComponent=!0},970:(e,t,s)=>{s.d(t,{Z:()=>n});const n=s.p+"assets/images/schema-a5019b4612ad67cbe001ddbc8a1d1475.png"}}]);