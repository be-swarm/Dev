"use strict";(self.webpackChunkdev=self.webpackChunkdev||[]).push([[1237],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2404:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,title:"Saisie d'un entier"},o=void 0,l={unversionedId:"DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputInteger",id:"DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputInteger",title:"Saisie d'un entier",description:"Le composant InputInteger permet de saisir un entier.",source:"@site/docs/DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputInteger.md",sourceDirName:"DevApps/NET/PACKAGES/CoreBlazorApp/Composants",slug:"/DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputInteger",permalink:"/Dev/docs/DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputInteger",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Saisie d'un entier"},sidebar:"tutorialSidebar",previous:{title:"Saisie d'un d\xe9cimal",permalink:"/Dev/docs/DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputDecimal"},next:{title:"Saisie d'un texte",permalink:"/Dev/docs/DevApps/NET/PACKAGES/CoreBlazorApp/Composants/InputText"}},p={},s=[{value:"Gestion des data annotations",id:"gestion-des-data-annotations",level:2},{value:"Saisie d&#39;un integer via un Slider",id:"saisie-dun-integer-via-un-slider",level:3}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Le composant InputInteger permet de saisir un entier."),(0,a.kt)("p",null,"Il se place dans une page razor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Test\n    {\n        [Range(1, 99)]\n        public int Age { get; set; } =default!;\n    }\n    Test Model = new Test();\n    <BeSwarm.CoreBlazorApp.Components.InputInteger @bind-Value="@model.Age" Label="Age" ValidateProperty="@(()=>model.Age)" />\n\n')),(0,a.kt)("p",null,"Il accepte les attributs suivants:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Format\t: Format de la saisie"),(0,a.kt)("li",{parentName:"ul"},"Min\t\t: Valeur minimale"),(0,a.kt)("li",{parentName:"ul"},"Max\t\t: Valeur maximale"),(0,a.kt)("li",{parentName:"ul"},"Step      :Pas de la saisie"),(0,a.kt)("li",{parentName:"ul"},"ReadOnly  : Indique si le composant est en lecture seule"),(0,a.kt)("li",{parentName:"ul"},"ValidateStrict : D\xe9finit les bornes possibles de saisie"),(0,a.kt)("li",{parentName:"ul"},"Label         :Le label du composant")),(0,a.kt)("h2",{id:"gestion-des-data-annotations"},"Gestion des data annotations"),(0,a.kt)("p",null,"Si la propri\xe9t\xe9 poss\xe8de des data annotations elles peuvent \xeatre automatiquement prises en compte et contr\xf4l\xe9es par le composant.\nPour cela il faut utiliser l'attribut ",(0,a.kt)("inlineCode",{parentName:"p"},"ValidateProperty")," qui prend en param\xe8tre une lambda qui retourne la propri\xe9t\xe9 \xe0 valider.\nLa propri\xe9t\xe9 ValidateStrict lorsqu'elle est d\xe9finie limite automatiquement la possibilit\xe9 de saisie aux bornes d\xe9finies par les data annotations.\nEx:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public class Test\n    {\n        [Range(1, 99)]\n        public int Age { get; set; } =default!;\n    }\n    Test Model = new Test();\n    <BeSwarm.CoreBlazorApp.Components.InputInteger @bind-Value="@model.Age" Label="Age" ValidateProperty="@(()=>model.Age)" ValidateStrict=true />\n')),(0,a.kt)("p",null,"Dans ce cas la saisie sera automatiquement limit\xe9e \xe0 1 \xe0 99."),(0,a.kt)("h3",{id:"saisie-dun-integer-via-un-slider"},"Saisie d'un integer via un Slider"),(0,a.kt)("p",null,"Le composant ",(0,a.kt)("inlineCode",{parentName:"p"},"<InputSliderInteger>")," permet avec les m\xeames param\xe8tres que ",(0,a.kt)("inlineCode",{parentName:"p"},"<InputInteger>")," de saisir un entier via un slider."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'    <BeSwarm.CoreBlazorApp.Components.InputSliderInteger @bind-Value="@model.Age" Label="Age" ValidateProperty="@(()=>model.Age)" ValidateStrict="true" />\n')))}d.isMDXComponent=!0}}]);