"use strict";(self.webpackChunkdev=self.webpackChunkdev||[]).push([[8414],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=n,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return a?r.createElement(g,l(l({ref:t},p),{},{components:a})):r.createElement(g,l({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1790:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:1},l=void 0,o={unversionedId:"DevApps/NET/PACKAGES/Validator",id:"DevApps/NET/PACKAGES/Validator",title:"Validator",description:"Package BeSwarm.Validator",source:"@site/docs/DevApps/NET/PACKAGES/Validator.md",sourceDirName:"DevApps/NET/PACKAGES",slug:"/DevApps/NET/PACKAGES/Validator",permalink:"/Dev/docs/DevApps/NET/PACKAGES/Validator",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Les packages",permalink:"/Dev/docs/category/les-packages"},next:{title:"ResxSourceGenerator",permalink:"/Dev/docs/DevApps/NET/PACKAGES/ResxSourceGenerator"}},s={},u=[{value:"Package BeSwarm.Validator",id:"package-beswarmvalidator",level:3},{value:"Utilisation",id:"utilisation",level:4},{value:"V\xe9rifier la pr\xe9sence d&#39;un attribut sur une propri\xe9t\xe9",id:"v\xe9rifier-la-pr\xe9sence-dun-attribut-sur-une-propri\xe9t\xe9",level:3},{value:"Utilisation avec Blazor dans un EditForm",id:"utilisation-avec-blazor-dans-un-editform",level:3},{value:"Gestion de la langue",id:"gestion-de-la-langue",level:3},{value:"Ajouter des Fluent Validation",id:"ajouter-des-fluent-validation",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"package-beswarmvalidator"},"Package BeSwarm.Validator"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/BeSwarm.Validator/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/BeSwarm.Validator.svg",alt:"NuGet"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/BeSwarm.Validator/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/BeSwarm.Validator.svg",alt:"NuGet"}))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/be-swarm/Validator"},"https://github.com/be-swarm/Validator")),(0,n.kt)("p",null,"Ce package permet d'effectuer des validations d'attributs de mani\xe8re localis\xe9e."),(0,n.kt)("p",null,"Les attributs pris en charge sont les suivants:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"[Required]"),(0,n.kt)("li",{parentName:"ul"},"[Range]"),(0,n.kt)("li",{parentName:"ul"},"[MaxLength]"),(0,n.kt)("li",{parentName:"ul"},"[MinLength]"),(0,n.kt)("li",{parentName:"ul"},"[StringLength]")),(0,n.kt)("h4",{id:"utilisation"},"Utilisation"),(0,n.kt)("p",null,"Exemple de code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'public class Model\n{\n    [Required]\n    [MaxLength(6)]\n    public string Name { get; set; }\n}\n\nclass Program\n{\n\n\n    public static async Task Main(string[] args)\n    {\n\n        Model t= new();\n         // highlight-start\n        ValidateContext context = new ValidateContext(false);\n        var listvalidationfailure = await Validate.ValidateObject(t, context);\n         // highlight-end\n        foreach (var item in listvalidationfailure)\n        {\n           Console.WriteLine($"*** error **** Field: {item.PropertyName} value={item.Obj} attribute:{item.AttributeType} message:{item.ErrorMessage}");\n        }\n        t.Name = "11";\n        // highlight-next-line\n        listvalidationfailure = await Validate.ValidateObject(t, context);\n        foreach (var item in listvalidationfailure)\n        {\n            Console.WriteLine($"*** error **** Field: {item.PropertyName} value={item.Obj} attribute:{item.AttributeType} message:{item.ErrorMessage}");\n        }\n        t.Name = "LPLOKUAAA";\n        // highlight-next-line\n        listvalidationfailure = await Validate.ValidateObject(t, context);\n        foreach (var item in listvalidationfailure)\n        {\n            Console.WriteLine($"*** error **** Field: {item.PropertyName} value={item.Obj} attribute:{item.AttributeType} message:{item.ErrorMessage}");\n        }\n        Console.ReadKey();\n    }\n}\n\n')),(0,n.kt)("h3",{id:"v\xe9rifier-la-pr\xe9sence-dun-attribut-sur-une-propri\xe9t\xe9"},"V\xe9rifier la pr\xe9sence d'un attribut sur une propri\xe9t\xe9"),(0,n.kt)("p",null,"ex: v\xe9rifier si l'attribut ","[Required]"," est pr\xe9sent sur la propri\xe9t\xe9 Name de l'instance t"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"\nRequiredAttribute? ra=Validate.GetAttributeIfExist<RequiredAttribute>(t, nameof(t.Name));\n\n")),(0,n.kt)("h3",{id:"utilisation-avec-blazor-dans-un-editform"},"Utilisation avec Blazor dans un EditForm"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'EditForm Model="@_model" OnValidSubmit="@SubmitValidForm">\n// highlight-next-line\n    <BeSwarm.Validator.BlazorValidator @ref="_BlazorValidationValidator" ValidateContext="mycontext" />\n    ...\n</EditForm>\n    \n')),(0,n.kt)("h3",{id:"gestion-de-la-langue"},"Gestion de la langue"),(0,n.kt)("p",null,"Par defaut la langue courante est prise en compte.\nIl est cependant possible de sp\xe9cifier une langue particuli\xe8re pour la validation."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'    _validatorContext.Culture = new CultureInfo("FR");\n')),(0,n.kt)("h3",{id:"ajouter-des-fluent-validation"},"Ajouter des Fluent Validation"),(0,n.kt)("p",null,"Il est possible de rajouter des validations de type fluent validation.\nEx: Rajout d'une r\xe8gle fluent"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'public class FluentValidatorModel : AbstractValidator<Model>\n {\n    public FluentValidatorModel()\n    {\n            RuleFor(x => x.Name).NotEmpty().WithMessage("controlled by fluent: not empty");\n    }\n }\n')),(0,n.kt)("p",null,"puis dans le code:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"ValidateContext context = new ValidateContext(false);\ncontext.FluentValidator = new FluentValidatorModel();\nvar listvalidationfailure = await Validate.ValidateObject(t, context);\n")))}c.isMDXComponent=!0}}]);